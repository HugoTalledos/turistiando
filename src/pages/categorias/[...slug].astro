---
import BaseLayout from '@layouts/BaseLayout.astro'
import { getCollection } from 'astro:content'
import MainSection from '@components/ui/sections/MainSection.astro'
import { SITE } from '@/config'
import PostRepository from '@/api/posts/PostsRepository'
import type { PostProps } from '@/api/posts/PostProps.types'
import BlogCard from '@/components/blog/BlogCard.astro'


export async function getStaticPaths() {
    const categories = await getCollection('categories')
    return categories.map(category => ({
        params: { slug: category.slug },
        props: { category },
    }))
}

const { category } = Astro.props

const response = await PostRepository.getPostByCategory(category.data.id, {});
const postList: PostProps[] = Array.isArray(response) ? response : [];

const URL = Astro.url.href
---

<BaseLayout
    title={category.data.title}
    description={category.data.description}
    structuredData={{
        '@context': 'https://schema.org',
        '@type': 'WebPage',
        'inLanguage': 'es-MX',
        '@id': URL,
        'url': URL,
        'name': `${category.data.title} - ${SITE.title}`,
        'description': category.data.description,
        'isPartOf': {
            '@type': 'WebSite',
            'name': `${category.data.title} - ${SITE.title}`,
        },
    }}
>
    <MainSection
        title={category.data.title}
        subTitle={category.data.description}
    />

    <section class="mx-auto max-w-[85rem] px-4 py-8 sm:px-6 lg:px-8 mb-10 2xl:max-w-full">
        <div class="grid gap-6 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2">
            { postList.length > 0 && postList.map((post) => <BlogCard post={post} />) }
        </div>
    </section>
    
</BaseLayout>
